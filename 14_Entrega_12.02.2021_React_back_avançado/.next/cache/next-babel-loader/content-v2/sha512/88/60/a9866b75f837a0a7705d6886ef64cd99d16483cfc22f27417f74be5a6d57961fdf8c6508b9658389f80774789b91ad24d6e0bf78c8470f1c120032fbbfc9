{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\flavio\\\\Documents\\\\0_RECODE - Cursos\\\\29.React_Next\\\\pages\\\\index.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport \"isomorphic-fetch\";\nexport default class Home extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.props.repositories.map(repo => /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: repo.name\n      }, repo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n_defineProperty(Home, \"getInitialProps\", async () => {\n  const response = await fetch(\"https://api.github.com/orgs/rocketseat/repos\");\n  return {\n    repositories: await response.json()\n  };\n});","map":{"version":3,"sources":["C:/Users/flavio/Documents/0_RECODE - Cursos/29.React_Next/pages/index.js"],"names":["React","Component","Home","render","props","repositories","map","repo","name","id","response","fetch","json"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,kBAAP;AAEA,eAAe,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AAS1CE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,gBACG,KAAKC,KAAL,CAAWC,YAAX,CAAwBC,GAAxB,CAA4BC,IAAI,iBAC/B;AAAA,kBAAmBA,IAAI,CAACC;AAAxB,SAASD,IAAI,CAACE,EAAd;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAjByC;;gBAAvBP,I,qBACM,YAAY;AACnC,QAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAC1B,8CAD0B,CAA5B;AAIA,SAAO;AAAEN,IAAAA,YAAY,EAAE,MAAMK,QAAQ,CAACE,IAAT;AAAtB,GAAP;AACD,C","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"isomorphic-fetch\";\r\n\r\nexport default class Home extends Component {\r\n  static getInitialProps = async () => {\r\n    const response = await fetch(\r\n      \"https://api.github.com/orgs/rocketseat/repos\"\r\n    );\r\n\r\n    return { repositories: await response.json() };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.repositories.map(repo => (\r\n          <h1 key={repo.id}>{repo.name}</h1>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}